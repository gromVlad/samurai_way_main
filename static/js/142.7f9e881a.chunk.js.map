{"version":3,"file":"static/js/142.7f9e881a.chunk.js","mappings":"+KACA,EAAkC,iCAAlC,EAA+E,2BAA/E,EAA2H,gCAA3H,EAA4K,gCAA5K,EAAwR,kCAAxR,EAA6U,kCAA7U,EAAwX,wBAAxX,EAAyb,yB,mBCU5aA,EAAS,SAACC,GACrB,IAAQC,EACND,EADMC,MAAOC,EACbF,EADaE,kBAAmBC,EAChCH,EADgCG,iBAAkBC,EAClDJ,EADkDI,mBAe9CC,EAXsB,WAM1B,IALA,IAAIA,EAAe,GAEfC,EAAaC,KAAKC,KAAKP,EAAMQ,WAAaR,EAAMS,YAG3CC,EAAI,EAAGA,GAAKL,EAAYK,IAC/BN,EAAaO,KAAKD,GAEpB,OAAON,EAEYQ,GAErB,OACE,iCACA,iBAAKC,UAAWC,EAAhB,UACGd,EAAMe,YAAc,GAAK,UAAY,IACrCX,EACEY,MACChB,EAAMe,YAAc,IAAM,EAAI,EAAIf,EAAMe,YAAc,EACtDf,EAAMe,YAAc,IAAM,EAAI,GAAKf,EAAMe,YAAc,GAExDE,KAAI,SAACC,EAAIC,GAAL,OACH,iBAEEC,QAAS,kBAAMnB,EAAkBiB,IACjCL,UAAWb,EAAMe,cAAgBG,EAAKJ,EAAgB,GAHxD,SAKGI,GAJIC,MATb,YAkBE,gBAAKN,UAAWC,EAAhB,SACGd,EAAMqB,MAAMJ,KAAI,SAACK,GAAD,OACf,iBAAKT,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASS,GAAE,gBAAWD,EAAKE,IAA3B,UACE,gBACEC,IACEH,EAAKI,OAAOC,OACZ,sHAEFC,IAAG,UAAKN,EAAKO,WAGjB,iBAAKhB,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,mBAA8CQ,EAAKO,SACnD,gBAAKhB,UAAWC,EAAhB,SAA6CQ,EAAKQ,SACjDR,EAAKS,UACJ,mBACEC,SAAUhC,EAAMiC,iBAAiBC,MAAK,SAAChB,GAAD,OAAQA,IAAOI,EAAKE,MAC1DX,UAAWC,EACXM,QAAS,WACPjB,EAAmBmB,EAAKE,KAJ5B,uBAUA,mBACEQ,SAAUhC,EAAMiC,iBAAiBC,MAAK,SAAChB,GAAD,OAAQA,IAAOI,EAAKE,MAC1DX,UAAWC,EACXM,QAAS,WACPlB,EAAiBoB,EAAKE,KAJ1B,yBAxBoCF,EAAKE,a,8BCiB5CW,GAAgBC,EAAAA,EAAAA,KAhDL,SAACpC,GACvB,MAAO,CACLA,MAAOA,EAAMqC,aA8CqC,CACpDC,oBAAAA,EAAAA,GACAC,mBAAAA,EAAAA,GACArC,iBAAAA,EAAAA,GACAC,mBAAAA,EAAAA,IAJ2BiC,EAnCH,SAACrC,GACzB,IACEC,EAKED,EALFC,MACAsC,EAIEvC,EAJFuC,oBACAC,EAGExC,EAHFwC,mBACArC,EAEEH,EAFFG,iBACAC,EACEJ,EADFI,oBAIFqC,EAAAA,EAAAA,YAAU,WACRF,EAAoBtC,EAAMe,YAAaf,EAAMS,cAC5C,IAOH,OACE,8BACGT,EAAMyC,YACL,SAAC,IAAD,KAEA,SAAC3C,EAAD,CACEG,kBAVkB,SAACyC,GACzBH,EAAmBG,EAAM1C,EAAMS,aAUzBT,MAAOA,EACPE,iBAAkBA,EAClBC,mBAAoBA","sources":["webpack://samurai-way/./src/components/users/usersUi.module.css?8649","components/users/usersUi.tsx","components/users/containerUser.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"users-container\":\"usersUi_users-container__MWGxG\",\"user-card\":\"usersUi_user-card__7KqQU\",\"user-card-info\":\"usersUi_user-card-info__J2BSE\",\"user-card-name\":\"usersUi_user-card-name__30EVb\",\"user-card-location\":\"usersUi_user-card-location__iiL4I\",\"user-card-status\":\"usersUi_user-card-status__0AeIF\",\"user-card-button\":\"usersUi_user-card-button__83NJi\",\"active\":\"usersUi_active__6KUTF\",\"pulse\":\"usersUi_pulse__Bul-t\",\"boxSpan\":\"usersUi_boxSpan__TKRdF\"};","import styles from \"./usersUi.module.css\";\nimport { InitState } from \"../redusers/reduсer_users\";\nimport { NavLink } from \"react-router-dom\";\ntype UserUIType = {\n  store: InitState;\n  AddNewCurrentPage: (page: number) => void;\n  followUsersThunk: (id: number) => void;\n  unfollowUsersThunk: (id: number) => void;\n};\n\n\nexport const UserUI = (props: UserUIType) => {\n  const { store, AddNewCurrentPage, followUsersThunk, unfollowUsersThunk } =\n    props;\n\n  //calc page\n  const funCalcCountAndPage = () => {\n    let newCountpage = [];\n    //calc page\n    let countpageS = Math.ceil(store.totalCount / store.pageNumber);\n\n    //create new arr for page\n    for (let i = 0; i <= countpageS; i++) {\n      newCountpage.push(i);\n    }\n    return newCountpage;\n  };\n  const newCountpage = funCalcCountAndPage();\n\n  return (\n    <>\n    <div className={styles.boxSpan}>\n      {store.currentPage > 10 ? \". . .  \" : \" \"}\n      {newCountpage\n        .slice(\n          store.currentPage - 10 <= 0 ? 1 : store.currentPage - 5,\n          store.currentPage - 10 <= 0 ? 12 : store.currentPage + 5\n        )\n        .map((el, index) => (\n          <span\n            key={index}\n            onClick={() => AddNewCurrentPage(el)}\n            className={store.currentPage === el ? styles.active : \"\"}\n          >\n            {el}\n          </span>\n        ))}\n      . . .\n      </div>\n      <div className={styles[\"users-container\"]}>\n        {store.items.map((user) => (\n          <div className={styles[\"user-card\"]} key={user.id}>\n            <NavLink to={`/prof/${user.id}`}>\n              <img\n                src={\n                  user.photos.small ||\n                  \"https://kartinkin.net/uploads/posts/2021-07/1625791697_35-kartinkin-com-p-anime-patsan-v-maske-anime-krasivo-35.jpg\"\n                }\n                alt={`${user.name}`}\n              />\n            </NavLink>\n            <div className={styles[\"user-card-info\"]}>\n              <div className={styles[\"user-card-name\"]}>{`${user.name}`}</div>\n              <div className={styles[\"user-card-status\"]}>{user.status}</div>\n              {user.followed ? (\n                <button\n                  disabled={store.isprogressFollow.some((el) => el === user.id)}\n                  className={styles[\"user-card-button\"]}\n                  onClick={() => {\n                    unfollowUsersThunk(user.id);\n                  }}\n                >\n                  Unfollow\n                </button>\n              ) : (\n                <button\n                  disabled={store.isprogressFollow.some((el) => el === user.id)}\n                  className={styles[\"user-card-button\"]}\n                  onClick={() => {\n                    followUsersThunk(user.id);\n                  }}\n                >\n                  Follow\n                </button>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\n","import { connect } from \"react-redux\";\nimport { UserUI } from \"./usersUi\";\nimport {\n  InitState,\n  firstLoadUsersThunk,\n  followUsersThunk,\n  nextLoadUsersThunk,\n  unfollowUsersThunk,\n} from \"../redusers/reduсer_users\";\nimport { StateType } from \"../redusers/redux-store\";\nimport { useEffect } from \"react\";\nimport { Preloader } from \"../preloader/preloader\";\nimport { compose } from \"redux\";\n\nexport type AllTypeConnectUser = MapStateToPropsType & MapDispatchToPropsType;\n\ntype MapStateToPropsType = {\n  store: InitState;\n};\n\nconst mapStateToProps = (store: StateType): MapStateToPropsType => {\n  return {\n    store: store.usersPage,\n  };\n};\n\ntype MapDispatchToPropsType = {\n  firstLoadUsersThunk: (currentPage: number, pageNumber: number) => void;\n  nextLoadUsersThunk: (page: number, pageNumber: number) => void;\n  followUsersThunk: (id: number) => void;\n  unfollowUsersThunk: (id: number) => void;\n};\n\nconst UsePreContainerUI = (props: AllTypeConnectUser) => {\n  const {\n    store,\n    firstLoadUsersThunk,\n    nextLoadUsersThunk,\n    followUsersThunk,\n    unfollowUsersThunk,\n  } = props;\n\n  //first load on page\n  useEffect(() => {\n    firstLoadUsersThunk(store.currentPage, store.pageNumber);\n  }, []);\n\n  //fun add new current page\n  const AddNewCurrentPage = (page: number) => {\n    nextLoadUsersThunk(page, store.pageNumber);\n  };\n\n  return (\n    <>\n      {store.isFetching ? (\n        <Preloader />\n      ) : (\n        <UserUI\n          AddNewCurrentPage={AddNewCurrentPage}\n          store={store}\n          followUsersThunk={followUsersThunk}\n          unfollowUsersThunk={unfollowUsersThunk}\n        />\n      )}\n    </>\n  );\n};\n\nexport const ContainerUser = connect(mapStateToProps, {\n  firstLoadUsersThunk,\n  nextLoadUsersThunk,\n  followUsersThunk,\n  unfollowUsersThunk\n})(UsePreContainerUI);\n"],"names":["UserUI","props","store","AddNewCurrentPage","followUsersThunk","unfollowUsersThunk","newCountpage","countpageS","Math","ceil","totalCount","pageNumber","i","push","funCalcCountAndPage","className","styles","currentPage","slice","map","el","index","onClick","items","user","to","id","src","photos","small","alt","name","status","followed","disabled","isprogressFollow","some","ContainerUser","connect","usersPage","firstLoadUsersThunk","nextLoadUsersThunk","useEffect","isFetching","page"],"sourceRoot":""}